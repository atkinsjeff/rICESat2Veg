% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ATL08_seg_attributes_dt_clipGeometry.R
\name{ATL08_seg_attributes_dt_clipGeometry}
\alias{ATL08_seg_attributes_dt_clipGeometry}
\title{Clip ATL08 Terrain and Canopy Attributes by Geometry}
\usage{
ATL08_seg_attributes_dt_clipGeometry(
  atl08_seg_att_dt,
  polygon,
  split_by = NULL
)
}
\arguments{
\item{atl08_seg_att_dt}{A atl08_seg_att_dt object (output of \code{\link[=ATL08_seg_attributes_dt]{ATL08_seg_attributes_dt()}} function).
An S4 object of class \code{\linkS4class{icesat2.atl08_dt}}}

\item{polygon}{Polygon. An object of class \code{\link[terra:SpatVector-class]{terra::SpatVector}},
which can be loaded as an ESRI shapefile using \link[terra:vect]{terra::vect} function in the
\emph{sf} package.}

\item{split_by}{Polygon id. If defined, ATL08 data will be clipped by each polygon using
the polygon id from table of attribute defined by the user}
}
\value{
Returns an S4 object of class \code{\linkS4class{icesat2.atl08_dt}}
containing the clipped ATL08 Terrain and Canopy Attributes.
}
\description{
This function clips ATL08 Terrain and Canopy Attributes within a given geometry
}
\examples{
# Specifying the path to ATL08 file
atl08_path <- system.file("extdata",
  "atl08_clip.h5",
  package = "ICESat2VegR"
)

# Reading ATL08 data (h5 file)
atl08_h5 <- ATL08_read(atl08_path = atl08_path)

# Extracting ATL08-derived terrain and canopy attributes
atl08_seg_att_dt <- ATL08_seg_attributes_dt(atl08_h5 = atl08_h5)

polygon_path <- system.file("extdata",
  "clip_geom.shp",
  package = "ICESat2VegR"
)

if (require(terra)) {
  polygon <- vect(polygon_path)

  head(atl08_seg_att_dt)
  # Clipping ATL08 Terrain and Canopy Attributes by Geometry
  atl08_seg_att_dt_clip <- ATL08_seg_attributes_dt_clipGeometry(atl08_seg_att_dt, polygon, split_by = "id")

  hasLeaflet <- require(leaflet)

  if (hasLeaflet) {
    leaflet() \%>\%
      addCircleMarkers(atl08_seg_att_dt_clip$longitude,
        atl08_seg_att_dt_clip$latitude,
        radius = 1,
        opacity = 1,
        color = "red"
      ) \%>\%
      addScaleBar(options = list(imperial = FALSE)) \%>\%
      addPolygons(
        data = polygon, weight = 1, col = "white",
        opacity = 1, fillOpacity = 0
      ) \%>\%
      addProviderTiles(providers$Esri.WorldImagery,
        options = providerTileOptions(minZoom = 3, maxZoom = 17)
      )
  }
}
close(atl08_h5)
}
