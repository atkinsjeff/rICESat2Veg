// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// findRadius
IntegerVector findRadius(NumericVector x, NumericVector y, const double radius, const int sampleSize);
RcppExport SEXP _ICESat2VegR_findRadius(SEXP xSEXP, SEXP ySEXP, SEXP radiusSEXP, SEXP sampleSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< const double >::type radius(radiusSEXP);
    Rcpp::traits::input_parameter< const int >::type sampleSize(sampleSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(findRadius(x, y, radius, sampleSize));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_grid_index_module();

static const R_CallMethodDef CallEntries[] = {
    {"_ICESat2VegR_findRadius", (DL_FUNC) &_ICESat2VegR_findRadius, 4},
    {"_rcpp_module_boot_grid_index_module", (DL_FUNC) &_rcpp_module_boot_grid_index_module, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_ICESat2VegR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
